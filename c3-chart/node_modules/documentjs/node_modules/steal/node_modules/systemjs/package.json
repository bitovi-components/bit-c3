{
  "name": "systemjs",
  "version": "0.14.0",
  "description": "System loader extension for flexible AMD & CommonJS support",
  "main": "dist/system.src.js",
  "repository": {
    "type": "git",
    "url": "git://github.com/systemjs/systemjs"
  },
  "author": {
    "name": "Guy Bedford"
  },
  "license": "MIT",
  "dependencies": {
    "es6-module-loader": "~0.14.0"
  },
  "devDependencies": {
    "babel-core": "^4.1.1",
    "qunit": "^0.6.2",
    "uglify-js": "~2.4.13",
    "traceur": "0.0.82"
  },
  "scripts": {
    "test": "npm run test:6to5 && npm run test:traceur",
    "test:babel": "qunit -c s:./dist/system.js -t ./test/test-babel.js",
    "test:traceur": "qunit -c s:./dist/system.js -t ./test/test.js"
  },
  "gitHead": "6d57246fe8edbce9e83e8b450e9945c9fb7389c0",
  "readme": "SystemJS\n========\n\n[![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/systemjs/systemjs?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\nUniversal dynamic module loader - loads ES6 modules, AMD, CommonJS and global scripts in the browser and NodeJS. Works with both Traceur and Babel.\n\nDesigned as a collection of extensions to the [ES6 module loader](https://github.com/ModuleLoader/es6-module-loader) which can also be applied individually.\n\n* [Loads any module format](https://github.com/systemjs/systemjs/wiki/Module-Format-Support) with [exact circular reference and binding support](https://github.com/ModuleLoader/es6-module-loader/wiki/Circular-References-&-Bindings).\n* Loads [ES6 modules compiled into the `System.register` bundle format for production](https://github.com/systemjs/systemjs/wiki/Production-Workflows), maintaining circular references support.\n* Supports RequireJS-style [map](https://github.com/systemjs/systemjs/wiki/Map-Configuration), [paths](https://github.com/ModuleLoader/es6-module-loader/wiki/Configuring-the-Loader#paths-implementation), [bundles](https://github.com/systemjs/systemjs/wiki/Production-Workflows#bundle-extension) and [global shims](https://github.com/systemjs/systemjs/wiki/Module-Format-Support#globals-global).\n* [Loader plugins](#plugins) allow loading assets through the module naming system such as CSS, JSON or images.\n\nDesigned to work with the [ES6 Module Loader polyfill](https://github.com/ModuleLoader/es6-module-loader) (9KB) for a combined total footprint of 16KB minified and gzipped.\n\nRuns in IE8+ and NodeJS.\n\nFor discussion, [see the Google Group](https://groups.google.com/group/systemjs).\n\nFor a list of guides and tools, see the [community project page](https://github.com/systemjs/systemjs/wiki/Community-Projects).\n\nDocumentation\n---\n\n* [Basic Use](https://github.com/systemjs/systemjs/wiki/Basic-Use)\n* [Loader Configuration](https://github.com/ModuleLoader/es6-module-loader/wiki/Configuring-the-Loader)\n* [Map Configuration](https://github.com/systemjs/systemjs/wiki/Map-Configuration)\n* [Meta Configuration](https://github.com/systemjs/systemjs/wiki/Meta-Configuration)\n* [Module Format Support](https://github.com/systemjs/systemjs/wiki/Module-Format-Support)\n* [Relative Dynamic Loading](https://github.com/systemjs/systemjs/wiki/Relative-Dynamic-Loading)\n* [Versions Extension](https://github.com/systemjs/systemjs/wiki/Versions-Extension)\n* [Production Workflows](https://github.com/systemjs/systemjs/wiki/Production-Workflows)\n* [Creating Plugins](https://github.com/systemjs/systemjs/wiki/Creating-a-Plugin)\n* [Creating a Custom Module Format](https://github.com/systemjs/systemjs/wiki/Creating-a-Custom-Format-Extension)\n\nGetting Started\n---\n\n### Browser Use\n\nDownload [`es6-module-loader.js`](https://github.com/ModuleLoader/es6-module-loader/blob/v0.13.0/dist/es6-module-loader.js) into the same folder as `system.js`.\n\nLoad SystemJS with a single script tag:\n\n```html\n<script src=\"system.js\"></script>\n```\n\nIt will load `es6-module-loader.js` itself.\n\nTo load ES6, locate [`traceur.js`](https://raw.githubusercontent.com/jmcriffey/bower-traceur/0.0.82/traceur.js) in the same folder and it will be loaded when needed.\n\nFor use with Babel set:\n\n```html\n<script>\n  System.transpiler = 'babel';\n</script>\n```\n\nAlternatively a custom path to Babel can also be set:\n\n```html\n<script src=\"system.js\" data-babel-src=\"path/to/babel.js\"></script>\n```\n\n### NodeJS Use\n\nTo load modules in NodeJS, install SystemJS with:\n\n```\n  npm install systemjs\n```\n\nWe can then load modules equivalently to in the browser:\n\n```javascript\nvar System = require('systemjs');\n\n/* \n * Include\n *   System.transpiler = 'babel';\n * to use Babel instead of Traceur\n */\n\n// loads './app.js' from the current directory\nSystem.import('./app').then(function(m) {\n  console.log(m);\n});\n```\n\nIf configuring `baseURL` for use in Windows, prepend `file:` i.e.\n\n```javascipt\nSystem.config({\n baseURL: 'file:' + path.resolve('../path')\n});\n```\n\n### Plugins\n\nPlugins handle alternative loading scenarios, including loading assets such as CSS or images, and providing custom transpilation scenarios.\n\nSupported Plugins:\n\n* [CSS](https://github.com/systemjs/plugin-css) `System.import('my/file.css!')`\n* [Image](https://github.com/systemjs/plugin-image) `System.import('some/image.png!image')`\n* [JSON](https://github.com/systemjs/plugin-json) `System.import('some/data.json!').then(function(json){})`\n* [Text](https://github.com/systemjs/plugin-text) `System.import('some/text.txt!text').then(function(text) {})`\n\nAdditional Plugins:\n\n* [CoffeeScript](https://github.com/forresto/plugin-coffee) `System.import('./test.coffee!')`\n* [Jade](https://github.com/johnsoftek/plugin-jade)\n* [JSX](https://github.com/floatdrop/plugin-jsx) `System.import('template.jsx!')`\n* [Markdown](https://github.com/guybedford/plugin-md) `System.import('app/some/project/README.md!').then(function(html) {})`\n* [WebFont](https://github.com/guybedford/plugin-font) `System.import('google Port Lligat Slab, Droid Sans !font')`\n\n[Read the guide here on creating plugins](https://github.com/systemjs/systemjs/wiki/Creating-a-Plugin).\n\n#### Running the tests\n\nTo install the dependencies correctly, run `bower install` from the root of the repo, then open `test/test.html` in a browser with a local server\nor file access flags enabled.\n\nLicense\n---\n\nMIT\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/systemjs/systemjs/issues"
  },
  "homepage": "https://github.com/systemjs/systemjs",
  "_id": "systemjs@0.14.0",
  "_shasum": "42153e5aa793a1bed2e66e5610c4ff2b63163559",
  "_from": "../../../../../../var/folders/j6/t3kh18xx2lx58zx0_rq5t9f00000gn/T/npm-11393-fbb5419e/git-cache-edc0772809b1/6d57246fe8edbce9e83e8b450e9945c9fb7389c0",
  "_resolved": "git+https://github.com/bitovi/systemjs#6d57246fe8edbce9e83e8b450e9945c9fb7389c0"
}
